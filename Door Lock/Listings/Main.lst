C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 18:20:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\Main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Main
                    -.lst) TABS(2) OBJECT(.\Objects\Main.obj)

line level    source

   1          // embedded system to control a door in 8051 microncontroller
   2          
   3          #include <reg51.h>
   4          
   5          
   6          //Keypad Rows Pins
   7          sbit keyRow1 = P2^0;
   8          sbit keyRow2 = P2^1;
   9          sbit keyRow3 = P2^2;
  10          sbit keyRow4 = P2^3;
  11          
  12          //Keypad Columns Pins
  13          sbit keyColumn1 = P3^0;
  14          sbit keyColumn2 = P3^1;
  15          sbit keyColumn3 = P3^2;
  16          
  17          //Motor Pins
  18          sbit motorPin1 = P3^3;
  19          sbit motorPin2 = P3^4;
  20          
  21          //Led Pins
  22          sbit RS = P3^5;
  23          sbit RW = P3^6;
  24          sbit EN = P3^7;
  25          
  26          int boolean = 0;
  27          
  28          /* Functions */
  29          void LCD_INIT(void);
  30          void LCD_CMD(unsigned char);
  31          void LCD_DATA(unsigned char);
  32          void LCD_DISPLAY(unsigned char *str);
  33          char keypadValue();
  34          void Check();
  35          void Delay(unsigned int);
  36          unsigned char Pin[] = {"12345"};
  37          unsigned char InPin[5];
  38          
  39          //Main
  40          void main()
  41          {
  42   1        unsigned int i = 0;
  43   1        
  44   1        LCD_INIT();
  45   1        
  46   1        while(1)
  47   1        {
  48   2          LCD_CMD(0x80);  //force cursor to begining of 1st row
  49   2          LCD_DISPLAY("ENTER PASSWORD");
  50   2          Delay(1000);
  51   2          LCD_CMD(0xC0);  //force cursor to begining of 2nd row
  52   2          
  53   2          while(Pin[i] != '\0')
  54   2          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 18:20:56 PAGE 2   

  55   3            InPin[i] = keypadValue(); //read the passwored character by character
  56   3            Delay(1000);
  57   3            i++;
  58   3          }
  59   2          
  60   2          Check();
  61   2          
  62   2        }
  63   1        
  64   1        
  65   1        
  66   1      }
  67          
  68          //LCD initializing funtion
  69          void LCD_INIT(void)
  70          {
  71   1        Delay(100);
  72   1        LCD_CMD(0x38);  //  2 lines and 5×7 matrix
  73   1        LCD_CMD(0x0E);  // Display ON, cursor blinking
  74   1        LCD_CMD(0x01);  // Clear display screen
  75   1      }
  76          
  77          //Lcd commands function
  78          void LCD_CMD(unsigned char x)
  79          {
  80   1        P1 = x;
  81   1        RS = 0; // command mode
  82   1        RW = 0; // read
  83   1        EN = 1;
  84   1        Delay(1000);
  85   1        EN = 0;
  86   1        return;
  87   1      }
  88          
  89          //LCD displaynig data function
  90          void LCD_DISPLAY(unsigned char *str)
  91          {
  92   1          int k;
  93   1          for (k = 0; str[k] != '\0'; str++)
  94   1          {
  95   2              LCD_DATA(str[k]);
  96   2          }
  97   1          Delay(10000);
  98   1      }
  99          
 100          //LCD receiving data function
 101          void LCD_DATA(unsigned char w)
 102          {
 103   1        P1 = w;
 104   1        RS = 1; // data mode
 105   1        RW = 0; // read
 106   1        EN = 1;
 107   1        Delay(1000);
 108   1        EN = 0;
 109   1        return;
 110   1          
 111   1      }
 112          
 113          void Delay(unsigned int i)
 114          {
 115   1          int a, b;
 116   1          for (a = 0; a < i; a++)
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 18:20:56 PAGE 3   

 117   1          {
 118   2              for (b = 0; b < 10; b++);
 119   2          }
 120   1      }
 121          
 122          //Getting keypad character value function
 123          char keypadValue()
 124          {
 125   1        int x = 0;
 126   1        while(x == 0)
 127   1        {
 128   2          
 129   2          //get values for first row
 130   2          keyRow1 = 0;
 131   2          keyRow2 = 1;
 132   2          keyRow3 = 1;
 133   2          keyRow4 = 1;
 134   2          
 135   2          if(keyColumn1 == 0)
 136   2          {
 137   3            LCD_DATA('*');
 138   3            Delay(1000);
 139   3            x = 1;
 140   3            return '1';
 141   3          }
 142   2          if(keyColumn2 == 0)
 143   2          {
 144   3            LCD_DATA('*');
 145   3            Delay(1000);
 146   3            x = 1;
 147   3            return '2';
 148   3          }
 149   2          if(keyColumn3 == 0)
 150   2          {
 151   3            LCD_DATA('*');
 152   3            Delay(1000);
 153   3            x = 1;
 154   3            return '3';
 155   3          }
 156   2        
 157   2        //get values for second row
 158   2          keyRow1 = 1;
 159   2          keyRow2 = 0;
 160   2          keyRow3 = 1;
 161   2          keyRow4 = 1;
 162   2        
 163   2          if(keyColumn1 == 0)
 164   2          {
 165   3            LCD_DATA('*');
 166   3            Delay(1000);
 167   3            x = 1;
 168   3            return '4';
 169   3          }
 170   2          if(keyColumn2 == 0)
 171   2          {
 172   3            LCD_DATA('*');
 173   3            Delay(1000);
 174   3            x = 1;
 175   3            return '5';
 176   3          }
 177   2          if(keyColumn3 == 0)
 178   2          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 18:20:56 PAGE 4   

 179   3            LCD_DATA('*');
 180   3            Delay(1000);
 181   3            x = 1;
 182   3            return '6';
 183   3          }
 184   2      
 185   2        //get values for third row
 186   2          keyRow1 = 1;
 187   2          keyRow2 = 1;
 188   2          keyRow3 = 0;
 189   2          keyRow4 = 1;
 190   2        
 191   2          if(keyColumn1 == 0)
 192   2          {
 193   3            LCD_DATA('*');
 194   3            Delay(1000);
 195   3            x = 1;
 196   3            return '7';
 197   3          }
 198   2          if(keyColumn2 == 0)
 199   2          {
 200   3            LCD_DATA('*');
 201   3            Delay(1000);
 202   3            x = 1;
 203   3            return '8';
 204   3          }
 205   2          if(keyColumn3 == 0)
 206   2          {
 207   3            LCD_DATA('*');
 208   3            Delay(1000);
 209   3            x = 1;
 210   3            return '9';
 211   3          }
 212   2        
 213   2        //get values for forth row
 214   2          keyRow1 = 1;
 215   2          keyRow2 = 1;
 216   2          keyRow3 = 1;
 217   2          keyRow4 = 0;
 218   2        
 219   2          if(keyColumn1 == 0)
 220   2          {
 221   3            LCD_DATA('*');
 222   3            Delay(1000);
 223   3            x = 1;
 224   3            return '*';
 225   3          }
 226   2          if(keyColumn2 == 0)
 227   2          {
 228   3            LCD_DATA('*');
 229   3            Delay(1000);
 230   3            x = 1;
 231   3            return '0';
 232   3          }
 233   2          if(keyColumn3 == 0)
 234   2          {
 235   3            LCD_DATA('*');
 236   3            Delay(1000);
 237   3            x = 1;
 238   3            return '#';
 239   3          }
 240   2        }
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2023 18:20:56 PAGE 5   

 241   1        //end while
 242   1      }
 243          
 244          //Password check function and run the door motor
 245          
 246          void Check()
 247          {
 248   1        //compare the input with the assign password value
 249   1        
 250   1        if(Pin[0] == InPin[0] && Pin[1] == InPin[1] && Pin[2] == InPin[2] && Pin[3] == InPin[3] && Pin[4] == InPi
             -n[4])
 251   1        {
 252   2          Delay(1000);
 253   2          LCD_CMD(0x01);  // clear display screen
 254   2          LCD_CMD(0x80);  // shift the entire display to the left
 255   2          // show input is correct
 256   2          LCD_DISPLAY("CORRECT PASSWORD");
 257   2          Delay(1000);
 258   2          // motor will run
 259   2          motorPin1 = 1;
 260   2          motorPin2 = 0;
 261   2          // show the door is opened
 262   2          LCD_CMD(0x01);  // clear display screen
 263   2          LCD_CMD(0x80);  // shift the entire display to the left
 264   2          LCD_DISPLAY("DOOR OPENED");
 265   2          Delay(10000);
 266   2          motorPin1 = 1;
 267   2          motorPin2 = 0;
 268   2          LCD_CMD(0x01);  // clear display screen
 269   2        }
 270   1        
 271   1        else
 272   1        {
 273   2          LCD_CMD(0x01);  // clear display screen
 274   2          LCD_CMD(0x18);  // shift the entire display to the left
 275   2          // show input is wrong
 276   2          LCD_DISPLAY(" WRONG PASSWORD");
 277   2          Delay(1000);
 278   2          // show the door is still closed
 279   2          LCD_CMD(0x01);  // clear display screen
 280   2          LCD_CMD(0x18);  // shift the entire display to the left
 281   2          LCD_DISPLAY(" DOOR STILL CLOSED");
 282   2          Delay(10000);
 283   2          LCD_CMD(0x01);  // clear display screen
 284   2        }
 285   1        
 286   1        boolean = 1;
 287   1        
 288   1      }
*** WARNING C291 IN LINE 242 OF Main.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    564    ----
   CONSTANT SIZE    =     79    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
